name: ci

on: [push, pull_request]

jobs:
  deno:
    name: deno_cache_dir-${{ matrix.os }}
    if: |
      github.event_name == 'push' ||
      !startsWith(github.event.pull_request.head.label, 'denoland:')
    runs-on: ${{ matrix.os }}
    permissions:
      contents: read
      id-token: write
    timeout-minutes: 30
    strategy:
      matrix:
        os: [macOS-latest, ubuntu-latest, windows-latest]

    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      - name: Install rust
        uses: dsherret/rust-toolchain-file@v1

      - uses: Swatinem/rust-cache@v2
        with:
          save-if: ${{ github.ref == 'refs/heads/main' }}

      - name: Install Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: 1.x

      - name: Format
        if: contains(matrix.os, 'ubuntu')
        run: |
          deno fmt --check
          cargo fmt --check

      - name: Lint
        if: contains(matrix.os, 'ubuntu')
        run: |
          deno lint
          cargo clippy

      - name: Test
        run: |
          deno task test
          cargo test

      - name: Cargo publish
        if: |
          contains(matrix.os, 'ubuntu') &&
          github.repository == 'denoland/deno_cache_dir' &&
          startsWith(github.ref, 'refs/tags/')
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        run: cargo publish -p deno_cache_dir

      - name: Get tag version
        if: |
          contains(matrix.os, 'ubuntu') &&
          github.repository == 'denoland/deno_cache_dir' &&
          startsWith(github.ref, 'refs/tags/')
        id: get_tag_version
        run: echo TAG_VERSION=${GITHUB_REF/refs\/tags\//} >> "$GITHUB_OUTPUT"

      - name: Publish
        if: |
          contains(matrix.os, 'ubuntu') &&
          github.repository == 'denoland/deno_cache_dir' &&
          startsWith(github.ref, 'refs/tags/')
        run: |
          deno run -A ./scripts/update_deno_json_version.ts ${{steps.get_tag_version.outputs.TAG_VERSION}}
          deno publish
